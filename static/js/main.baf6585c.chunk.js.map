{"version":3,"sources":["utils/partialShuffle.js","sorters/bogoSort.js","sorters/bubbleSort.js","sorters/combSort.js","sorters/heapSort.js","sorters/insertionSort.js","sorters/mergeSort.js","sorters/quickSortHoare.js","sorters/quickSortLomuto.js","sorters/radixSortLSD.js","sorters/selectionSort.js","sorters/shellSort.js","sorters/index.js","components/SquareCanvas.js","components/Animation.js","App.js","serviceWorker.js","index.js"],"names":["partialShuffle","array","itemCount","PARTIAL_SHUFFLE_FACTOR","Math","floor","sqrt","len","length","i","minIndex","maxIndex","newIndex","random","a","bogoSort","values","isSorted","shuffle","swap","firstIdx","secondIdx","bubbleSort","swapped","j","combSort","n","gap","getNextGap","nextGap","heapSort","heapify","arr","largest","right","left","insertionSort","key","mergeSort","_mergeSort","_merge","l","r","m","n1","n2","L","Array","R","k","quickSortHoare","_quickSortHoare","_partitionHoare","partitionGenerator","result","next","done","idx","value","pivotIdx","pivot","quickSortLomuto","_quickSortLomuto","_partitionLomuto","radixSortLSD","counter","fill","radix","max","parseInt","selectionSort","minIdx","shellSort","tmp","sorters","title","fn","bubblesort","combsort","insertionsort","selectionsort","TILE_PER_ROW","window","innerWidth","ROW_COUNT","innerHeight","draw","canvasRef","data","split","context","current","getContext","save","fillStyle","fillRect","restore","SquareCanvas","props","React","useRef","useEffect","ref","width","height","Animation","requestFrameRef","useState","setData","updateAnimationState","useCallback","sort","console","log","join","requestAnimationFrame","cancelAnimationFrame","App","sortAlgo","setSortAlgo","options","push","number","initialData","from","item","className","name","id","onChange","e","target","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baf6585c.chunk.js","sourcesContent":["const partialShuffle = (array, itemCount) => {\n  const PARTIAL_SHUFFLE_FACTOR = Math.floor(Math.sqrt(itemCount));\n  const len = array.length;\n\n  for (\n    let i = 0, minIndex = 0, maxIndex = PARTIAL_SHUFFLE_FACTOR;\n    i < len;\n    i++\n  ) {\n    let newIndex =\n      (Math.floor(Math.random() * PARTIAL_SHUFFLE_FACTOR) + minIndex) %\n      itemCount;\n    let a = array[newIndex];\n    array[newIndex] = array[i];\n    array[i] = a;\n    if (i === maxIndex) {\n      minIndex += PARTIAL_SHUFFLE_FACTOR;\n      maxIndex += PARTIAL_SHUFFLE_FACTOR;\n    }\n  }\n  return array;\n};\n\nexport default partialShuffle;\n","function* bogoSort(values) {\n  while (!isSorted(values)) {\n    shuffle(values, true);\n    yield values;\n  }\n}\n\nfunction isSorted(values) {\n  for (let i = 0; i < values.length - 1; i++) {\n    if (values[i] > values[i + 1]) return false;\n  }\n  return true;\n}\n\nfunction shuffle(values) {\n  const len = values.length;\n  for (let i = 0; i < len; i++) {\n    const newIndex = Math.floor(Math.random() * len);\n    swap(values, i, newIndex);\n  }\n}\n\nfunction swap(array, firstIdx, secondIdx) {\n  [array[firstIdx], array[secondIdx]] = [array[secondIdx], array[firstIdx]];\n}\n\nexport default bogoSort;\n","function* bubbleSort(values) {\n  let swapped = false;\n  for (let i = 0; i < values.length; i++) {\n    for (let j = 0; j < values.length - i - 1; j++) {\n      if (values[j] > values[j + 1]) {\n        swap(values, j, j + 1);\n        swapped = true;\n      }\n      yield values;\n    }\n\n    if (!swapped) {\n      return;\n    }\n  }\n}\n\nfunction swap(array, firstIdx, secondIdx) {\n  [array[firstIdx], array[secondIdx]] = [array[secondIdx], array[firstIdx]];\n}\n\nexport default bubbleSort;\n","function* combSort(values) {\n  let n = values.length;\n  let gap = n;\n  let swapped = true;\n  while (gap !== 1 || swapped) {\n    gap = getNextGap(gap);\n    swapped = false;\n    for (let i = 0; i < n - gap; i++) {\n      if (values[i] > values[i + gap]) {\n        [values[i], values[i + gap]] = [values[i + gap], values[i]];\n        yield values;\n        swapped = true;\n      }\n    }\n  }\n}\n\nconst getNextGap = gap => {\n  let nextGap = (gap * 10) / 13;\n  if (nextGap < 1) return 1;\n  return nextGap;\n};\n\nexport default combSort;\n","function* heapSort(arr) {\n  for (let i = arr.length; i >= 0; i--) {\n    yield* heapify(arr, arr.length, i);\n  }\n\n  for (let i = arr.length - 1; i > 0; i--) {\n    swap(arr, i, 0);\n    yield arr;\n    yield* heapify(arr, i, 0);\n  }\n}\n\nfunction* heapify(arr, n, i) {\n  let largest = i;\n  const left = 2 * i + 1;\n  const right = 2 * i + 2;\n\n  if (left < n && arr[largest] < arr[left]) largest = left;\n  if (right < n && arr[largest] < arr[right]) largest = right;\n  if (largest !== i) {\n    swap(arr, i, largest);\n    yield arr;\n    yield* heapify(arr, n, largest);\n  }\n}\n\nfunction swap(array, firstIdx, secondIdx) {\n  [array[firstIdx], array[secondIdx]] = [array[secondIdx], array[firstIdx]];\n}\n\nexport default heapSort;\n","function* insertionSort(values) {\n  for (let i = 1; i < values.length; i++) {\n    let key = values[i];\n    let j = i - 1;\n    while (j >= 0 && values[j] > key) {\n      values[j + 1] = values[j];\n      j = j - 1;\n      yield values;\n    }\n    values[j + 1] = key;\n    yield values;\n  }\n}\n\nexport default insertionSort;\n","function* mergeSort(values) {\n  yield* _mergeSort(values, 0, values.length - 1);\n}\n\nfunction* _mergeSort(values, l, r) {\n  if (l >= r) return;\n  const m = l + Math.floor((r - l) / 2);\n  yield* _mergeSort(values, l, m);\n  yield* _mergeSort(values, m + 1, r);\n  yield* _merge(values, l, m, r);\n}\n\nfunction* _merge(values, l, m, r) {\n  const n1 = m - l + 1;\n  const n2 = r - m;\n  let L = new Array(n1);\n  let R = new Array(n2);\n\n  for (let i = 0; i < n1; i++) L[i] = values[l + i];\n  for (let j = 0; j < n2; j++) R[j] = values[m + 1 + j];\n\n  let i = 0;\n  let j = 0;\n  let k = l;\n\n  while (i < n1 && j < n2) {\n    if (L[i] < R[j]) values[k++] = L[i++];\n    else values[k++] = R[j++];\n    yield values;\n  }\n\n  while (i < n1) {\n    values[k++] = L[i++];\n    yield values;\n  }\n\n  while (j < n2) {\n    values[k++] = R[j++];\n    yield values;\n  }\n}\n\nexport default mergeSort;\n","function* quickSortHoare(values) {\n  yield* _quickSortHoare(values, 0, values.length - 1);\n}\n\nfunction* _quickSortHoare(values, left, right) {\n  if (left >= right) {\n    return;\n  }\n  let partitionGenerator = _partitionHoare(values, left, right);\n\n  let result = partitionGenerator.next();\n  while (!result.done) {\n    result = partitionGenerator.next();\n    yield values;\n  }\n\n  let idx = result.value;\n  yield* _quickSortHoare(values, left, idx);\n  yield* _quickSortHoare(values, idx + 1, right);\n}\n\nfunction* _partitionHoare(values, left, right) {\n  let pivotIdx = left + Math.floor((right - left) / 2);\n  let pivot = values[pivotIdx];\n  while (true) {\n    while (values[left] < pivot) left++;\n    while (values[right] > pivot) right--;\n    if (left >= right) return right;\n    swap(values, left++, right--);\n    yield;\n  }\n}\n\nfunction swap(array, firstIdx, secondIdx) {\n  [array[firstIdx], array[secondIdx]] = [array[secondIdx], array[firstIdx]];\n}\n\nexport default quickSortHoare;\n","function* quickSortLomuto(values) {\n  yield* _quickSortLomuto(values, 0, values.length - 1);\n}\n\nfunction* _quickSortLomuto(values, left, right) {\n  if (left >= right) {\n    return;\n  }\n  let partitionGenerator = _partitionLomuto(values, left, right);\n\n  let result = partitionGenerator.next();\n  while (!result.done) {\n    result = partitionGenerator.next();\n    yield values;\n  }\n\n  let idx = result.value;\n  yield* _quickSortLomuto(values, left, idx - 1);\n  yield* _quickSortLomuto(values, idx + 1, right);\n}\n\nfunction* _partitionLomuto(values, left, right) {\n  let pivot = values[right];\n  let i = left - 1;\n  for (let j = left; j < right; j++) {\n    if (values[j] < pivot) {\n      swap(values, ++i, j);\n      yield;\n    }\n  }\n  swap(values, i + 1, right);\n  yield;\n  return i + 1;\n}\n\nfunction swap(array, firstIdx, secondIdx) {\n  [array[firstIdx], array[secondIdx]] = [array[secondIdx], array[firstIdx]];\n}\n\nexport default quickSortLomuto;\n","function* radixSortLSD(array) {\n  let values = [...array];\n  let counter = new Array(10).fill(0);\n  let n = values.length;\n  let radix = 1;\n  let max = Math.max(...array);\n\n  while (radix < max) {\n    for (let i = 0; i < n; i++) {\n      counter[parseInt(values[i] / radix) % 10]++;\n    }\n\n    for (let i = 1; i < counter.length; i++) {\n      counter[i] = counter[i] + counter[i - 1];\n    }\n\n    for (let i = n - 1; i >= 0; i--) {\n      array[--counter[parseInt(values[i] / radix) % 10]] = values[i];\n      yield array;\n    }\n\n    values = [...array];\n    counter.fill(0, 0);\n\n    radix *= 10;\n  }\n}\n\nexport default radixSortLSD;\n","function* selectionSort(values) {\n  for (let i = 0; i < values.length - 1; i++) {\n    let minIdx = i;\n    for (let j = i + 1; j < values.length; j++) {\n      if (values[j] < values[minIdx]) {\n        minIdx = j;\n      }\n    }\n    swap(values, i, minIdx);\n    yield values;\n  }\n}\n\nfunction swap(array, firstIdx, secondIdx) {\n  [array[firstIdx], array[secondIdx]] = [array[secondIdx], array[firstIdx]];\n}\n\nexport default selectionSort;\n","function* shellSort(values) {\n  let n = values.length;\n  for (let gap = Math.floor(n / 2); gap > 0; gap = Math.floor(gap / 2)) {\n    for (let i = gap; i < n; i++) {\n      let tmp = values[i];\n      let j = i;\n      for (j = i; j >= gap && values[j - gap] > tmp; j -= gap) {\n        values[j] = values[j - gap];\n        yield values;\n      }\n      values[j] = tmp;\n      yield values;\n    }\n  }\n}\n\nexport default shellSort;\n","import bogoSort from './bogoSort';\nimport bubbleSort from './bubbleSort';\nimport combSort from './combSort';\nimport heapSort from './heapSort';\nimport insertionSort from './insertionSort';\nimport mergeSort from './mergeSort';\nimport quickSortHoare from './quickSortHoare';\nimport quickSortLomuto from './quickSortLomuto';\nimport radixSortLSD from './radixSortLSD';\nimport selectionSort from './selectionSort';\nimport shellSort from './shellSort';\n\nconst sorters = {\n  bogoSort: {\n    title: 'Bogo Sort',\n    fn: bogoSort,\n  },\n  bubblesort: {\n    title: 'Bubble Sort',\n    fn: bubbleSort,\n  },\n  combsort: {\n    title: 'Comb Sort',\n    fn: combSort,\n  },\n  heapSort: {\n    title: 'Heap Sort',\n    fn: heapSort,\n  },\n  insertionsort: {\n    title: 'Insertion Sort',\n    fn: insertionSort,\n  },\n  mergeSort: {\n    title: 'Merge Sort',\n    fn: mergeSort,\n  },\n  quickSortHoare: {\n    title: 'Quick Sort (Hoare)',\n    fn: quickSortHoare,\n  },\n  quickSortLomuto: {\n    title: 'Quick Sort (Lomuto)',\n    fn: quickSortLomuto,\n  },\n  radixSortLSD: {\n    title: 'Radix Sort (LSD)',\n    fn: radixSortLSD,\n  },\n  selectionsort: {\n    title: 'Selection Sort',\n    fn: selectionSort,\n  },\n  shellSort: {\n    title: 'Shell Sort',\n    fn: shellSort,\n  },\n};\n\nexport default sorters;\n","import React from 'react';\n\nconst TILE_SIZE = 20;\nconst TILE_PER_ROW = Math.floor(window.innerWidth / TILE_SIZE);\nconst ROW_COUNT = Math.floor(window.innerHeight / TILE_SIZE);\n\nfunction SquareCanvas(props) {\n  let canvasRef = React.useRef(null);\n\n  React.useEffect(() => {\n    draw(canvasRef, props.data);\n  });\n\n  return (\n    <div>\n      <canvas\n        ref={canvasRef}\n        width={window.innerWidth}\n        height={window.innerHeight}\n      />\n    </div>\n  );\n}\n\nconst draw = (canvasRef, data) => {\n  data = data.split(',');\n  const canvas = canvasRef.current;\n  const context = canvas.getContext('2d');\n\n  context.save();\n\n  for (let i = 0; i < ROW_COUNT; i++) {\n    for (let j = 0; j < TILE_PER_ROW; j++) {\n      context.fillStyle = `hsl(${(data[j] / TILE_PER_ROW) * 360}, 100%, 50%)`;\n      context.fillRect(j * TILE_SIZE, i * TILE_SIZE, TILE_SIZE, TILE_SIZE);\n    }\n  }\n\n  context.restore();\n};\n\nexport default SquareCanvas;\n","import React from 'react';\nimport SquareCanvas from './SquareCanvas';\n\nfunction Animation(props) {\n  const requestFrameRef = React.useRef();\n  const [data, setData] = React.useState('');\n\n  const updateAnimationState = React.useCallback(() => {\n    const result = props.sort.next();\n\n    if (result.done) {\n      return console.log('done!');\n    }\n\n    setData(result.value.join(','));\n\n    requestFrameRef.current = requestAnimationFrame(updateAnimationState);\n  }, [props.sort]);\n\n  React.useEffect(() => {\n    requestFrameRef.current = requestAnimationFrame(updateAnimationState);\n    return () => cancelAnimationFrame(requestFrameRef.current);\n  }, [updateAnimationState]);\n\n  return <SquareCanvas data={data} />;\n}\n\nexport default Animation;\n","import React from 'react';\nimport './App.css';\nimport partialShuffle from './utils/partialShuffle';\nimport sorters from './sorters';\nimport Animation from './components/Animation';\n\nconst TILE_SIZE = 20;\nconst TILE_PER_ROW = Math.floor(window.innerWidth / TILE_SIZE);\n\nfunction App() {\n  const [sortAlgo, setSortAlgo] = React.useState('combsort');\n  const options = [];\n  for (const key in sorters) {\n    options.push(\n      <option value={key} key={sorters[key].title}>\n        {sorters[key].title}\n      </option>\n    );\n  }\n\n  let number = 0;\n  const initialData = partialShuffle(\n    Array.from(Array(TILE_PER_ROW), item => number++),\n    TILE_PER_ROW\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"App-content\">\n        <select\n          name=\"sort-algo\"\n          id=\"sort-algo-select\"\n          value={sortAlgo}\n          onChange={e => setSortAlgo(e.target.value)}\n        >\n          {options}\n        </select>\n        <Animation sort={sorters[sortAlgo].fn([...initialData])}></Animation>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}